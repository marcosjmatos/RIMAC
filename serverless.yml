service: RIMAC
frameworkVersion: '3'
useDotenv: true

plugins:
  - serverless-plugin-typescript
  - serverless-offline

provider:
  name: aws
  runtime: nodejs16.x
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource:
        - arn:aws:dynamodb:us-east-1:060844096599:table/Films


functions:
  hello:
    handler: src/index.hello
    events:
      - httpApi:
          path: /
          method: get
  getFilms:
    handler: src/index.getFilms
    events:
      - httpApi:
          path: /films
          method: get
  updateFilm:
    handler: src/index.updateFilm
    events:
      - httpApi:
          path: /films/{episodio}
          method: put
  getStarships:
    handler: src/index.getStarships
    events:
      - httpApi:
          path: /starships
          method: get


resources:
  Resources:
    # DynamoDB tables
    FilmsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Films
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: episodio_id
            AttributeType: S
        KeySchema:
          - AttributeName: episodio_id
            KeyType: HASH
    StarshipsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Starships
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: nombre
            AttributeType: S
        KeySchema:
          - AttributeName: nombre
            KeyType: HASH

